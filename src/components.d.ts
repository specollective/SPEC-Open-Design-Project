/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AccordionButton {
        "color": string;
        "description": string;
        "label": string;
        "width": string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface OdsBody {
    }
    interface OdsData {
    }
    interface OdsFoot {
    }
    interface OdsHeader {
    }
    interface OdsInputNumeric {
        "class": string;
        "headless": boolean;
    }
    interface OdsInputText {
        "class": string;
        "headless": boolean;
    }
    interface OdsRow {
    }
    interface OdsTable {
        "class": string;
        "headless": boolean;
    }
    interface OdsThead {
    }
    interface PlainButton {
    }
}
declare global {
    interface HTMLAccordionButtonElement extends Components.AccordionButton, HTMLStencilElement {
    }
    var HTMLAccordionButtonElement: {
        prototype: HTMLAccordionButtonElement;
        new (): HTMLAccordionButtonElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLOdsBodyElement extends Components.OdsBody, HTMLStencilElement {
    }
    var HTMLOdsBodyElement: {
        prototype: HTMLOdsBodyElement;
        new (): HTMLOdsBodyElement;
    };
    interface HTMLOdsDataElement extends Components.OdsData, HTMLStencilElement {
    }
    var HTMLOdsDataElement: {
        prototype: HTMLOdsDataElement;
        new (): HTMLOdsDataElement;
    };
    interface HTMLOdsFootElement extends Components.OdsFoot, HTMLStencilElement {
    }
    var HTMLOdsFootElement: {
        prototype: HTMLOdsFootElement;
        new (): HTMLOdsFootElement;
    };
    interface HTMLOdsHeaderElement extends Components.OdsHeader, HTMLStencilElement {
    }
    var HTMLOdsHeaderElement: {
        prototype: HTMLOdsHeaderElement;
        new (): HTMLOdsHeaderElement;
    };
    interface HTMLOdsInputNumericElement extends Components.OdsInputNumeric, HTMLStencilElement {
    }
    var HTMLOdsInputNumericElement: {
        prototype: HTMLOdsInputNumericElement;
        new (): HTMLOdsInputNumericElement;
    };
    interface HTMLOdsInputTextElement extends Components.OdsInputText, HTMLStencilElement {
    }
    var HTMLOdsInputTextElement: {
        prototype: HTMLOdsInputTextElement;
        new (): HTMLOdsInputTextElement;
    };
    interface HTMLOdsRowElement extends Components.OdsRow, HTMLStencilElement {
    }
    var HTMLOdsRowElement: {
        prototype: HTMLOdsRowElement;
        new (): HTMLOdsRowElement;
    };
    interface HTMLOdsTableElement extends Components.OdsTable, HTMLStencilElement {
    }
    var HTMLOdsTableElement: {
        prototype: HTMLOdsTableElement;
        new (): HTMLOdsTableElement;
    };
    interface HTMLOdsTheadElement extends Components.OdsThead, HTMLStencilElement {
    }
    var HTMLOdsTheadElement: {
        prototype: HTMLOdsTheadElement;
        new (): HTMLOdsTheadElement;
    };
    interface HTMLPlainButtonElement extends Components.PlainButton, HTMLStencilElement {
    }
    var HTMLPlainButtonElement: {
        prototype: HTMLPlainButtonElement;
        new (): HTMLPlainButtonElement;
    };
    interface HTMLElementTagNameMap {
        "accordion-button": HTMLAccordionButtonElement;
        "my-component": HTMLMyComponentElement;
        "ods-body": HTMLOdsBodyElement;
        "ods-data": HTMLOdsDataElement;
        "ods-foot": HTMLOdsFootElement;
        "ods-header": HTMLOdsHeaderElement;
        "ods-input-numeric": HTMLOdsInputNumericElement;
        "ods-input-text": HTMLOdsInputTextElement;
        "ods-row": HTMLOdsRowElement;
        "ods-table": HTMLOdsTableElement;
        "ods-thead": HTMLOdsTheadElement;
        "plain-button": HTMLPlainButtonElement;
    }
}
declare namespace LocalJSX {
    interface AccordionButton {
        "color"?: string;
        "description"?: string;
        "label"?: string;
        "onClicked"?: (event: CustomEvent<any>) => void;
        "width"?: string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface OdsBody {
    }
    interface OdsData {
    }
    interface OdsFoot {
    }
    interface OdsHeader {
    }
    interface OdsInputNumeric {
        "class"?: string;
        "headless"?: boolean;
    }
    interface OdsInputText {
        "class"?: string;
        "headless"?: boolean;
    }
    interface OdsRow {
    }
    interface OdsTable {
        "class"?: string;
        "headless"?: boolean;
    }
    interface OdsThead {
    }
    interface PlainButton {
    }
    interface IntrinsicElements {
        "accordion-button": AccordionButton;
        "my-component": MyComponent;
        "ods-body": OdsBody;
        "ods-data": OdsData;
        "ods-foot": OdsFoot;
        "ods-header": OdsHeader;
        "ods-input-numeric": OdsInputNumeric;
        "ods-input-text": OdsInputText;
        "ods-row": OdsRow;
        "ods-table": OdsTable;
        "ods-thead": OdsThead;
        "plain-button": PlainButton;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "accordion-button": LocalJSX.AccordionButton & JSXBase.HTMLAttributes<HTMLAccordionButtonElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "ods-body": LocalJSX.OdsBody & JSXBase.HTMLAttributes<HTMLOdsBodyElement>;
            "ods-data": LocalJSX.OdsData & JSXBase.HTMLAttributes<HTMLOdsDataElement>;
            "ods-foot": LocalJSX.OdsFoot & JSXBase.HTMLAttributes<HTMLOdsFootElement>;
            "ods-header": LocalJSX.OdsHeader & JSXBase.HTMLAttributes<HTMLOdsHeaderElement>;
            "ods-input-numeric": LocalJSX.OdsInputNumeric & JSXBase.HTMLAttributes<HTMLOdsInputNumericElement>;
            "ods-input-text": LocalJSX.OdsInputText & JSXBase.HTMLAttributes<HTMLOdsInputTextElement>;
            "ods-row": LocalJSX.OdsRow & JSXBase.HTMLAttributes<HTMLOdsRowElement>;
            "ods-table": LocalJSX.OdsTable & JSXBase.HTMLAttributes<HTMLOdsTableElement>;
            "ods-thead": LocalJSX.OdsThead & JSXBase.HTMLAttributes<HTMLOdsTheadElement>;
            "plain-button": LocalJSX.PlainButton & JSXBase.HTMLAttributes<HTMLPlainButtonElement>;
        }
    }
}
